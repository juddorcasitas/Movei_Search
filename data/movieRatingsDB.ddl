DROP SCHEMA IF EXISTS EmojieRate;
CREATE SCHEMA EmojiRate;
SET search_path TO EmojiRate;

DROP TABLE IF EXISTS emoji CASCADE;
DROP TABLE IF EXISTS user CASCADE;
DROP TABLE IF EXISTS movieRatings CASCADE;
DROP TABLE IF EXISTS movieVotes CASCADE;
DROP TABLE IF EXISTS movieDiscussion CASCADE;

CREATE TABLE emoji(
  emId INTEGER PRIMARY KEY,
  charCode VARCHAR NOT NULL
);

CREATE TABLE user(
  userId INTEGER PRIMARY KEY,
  handle VARCHAR(20) NOT NULL UNIQUE,
  password CHAR(40) NOT NULL
);

CREATE TABLE movieRatings(
  movieId INTEGER,
  ratings JSON NOT NULL,
  PRIMARY KEY(movieId, ratings)
);

CREATE TABLE movieVotes(
  mId INTEGER REFERENCES movieRatings(movieId)
    ON DELETE CASCADE ON UPDATE CASCADE,
  uId INTEGER  REFERENCES user(userId)
    ON DELETE CASCADE ON UPDATE CASCADE,
  vote VARCHAR  REFERENCES emoji(emId)
    ON DELETE CASCADE ON UPDATE CASCADE,
  timest TIMESTAMP WITH TIME ZONE NOT NULL,
  PRIMARY KEY (mId, uId, vote)
);

CREATE TABLE movieComment(
  commentId INTEGER PRIMARY KEY,
  mId INTEGER REFERENCES movieRatings(movieId)
    ON DELETE CASCADE ON UPDATE CASCADE,
  uId INTEGER REFERENCES user(userId)
    ON DELETE CASCADE ON UPDATE CASCADE,
  comment TEXT NOT NULL,
  author TEXT REFERENCES user(handle)
    ON DELETE CASCADE ON UPDATE CASCADE,
  timest TIMESTAMP WITH TIME ZONE NOT NULL
);
